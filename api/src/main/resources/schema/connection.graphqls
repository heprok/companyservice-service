type Connection {
    id: ID!
    participantFrom: ConnectionParticipant!
    participantTo: ConnectionParticipant!
    service: ConnectionService!
    status: ConnectionStatus!
    industry: String
}

enum ConnectionStatus {
    Pending
    InProgress
    Verified
}

enum ConnectionCompanyRoleType {
    Buyer
    Seller
}

type ConnectionCompanyRole {
    id: ID!
    name: String!
    type: ConnectionCompanyRoleType!
}

type ConnectionParticipant {
    user: User!
    company: Company!
    companyRole: ConnectionCompanyRole!
}

input ConnectionFilter {
    collaboratorIds: [ID!]
    industryIds: [ID!]
    location: String
    datesOfCollaborators: RangeYear
    status: [ConnectionStatus!]
    isHidden: Boolean
}

enum ConnectionSortBy {
    id, created
}

type Collaborator {
    id: ID!,
    name: String!,
}

input ConnectionSort{
    sortBy: ConnectionSortBy!
    direction: SortDirection!
}

type ConnectionList implements PaginatedList {
    items: [Connection]
    totalItems: Int!
}

type ConnectionService {
    id: ID!
    name: String!
    startDate: Year!
    endDate: Year
}

